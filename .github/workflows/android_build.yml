name: Android Build

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main

jobs:
  setup-build-environment:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip

      - name: Set up Android SDK
        run: |
          export ANDROID_HOME="${HOME}/android-sdk-root"
          mkdir -p $ANDROID_HOME
          wget --quiet --output-document=$ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
          unzip -qq -d "$ANDROID_HOME/cmdline-tools" "$ANDROID_HOME/cmdline-tools.zip"
          mv -T "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/tools"
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/cmdline-tools/tools/bin
          sdkmanager --version
          yes | sdkmanager --licenses > /dev/null || true
          sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" "platform-tools" "build-tools;${ANDROID_BUILD_TOOLS}"

      - name: Install Gradle
        uses: gradle/wrapper-action@v2

  - name: Use secret in workflow
        run: |
          echo "${{ secrets.LOCAL_PROPERTIES }}" > local.properties
          # Now you can use the local.properties file in your subsequent steps

  lintDebug:
    runs-on: ubuntu-latest
    needs: setup-build-environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run lintDebug
        run: |
          ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

      - name: Archive lint results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: lint-results-debug
          path: app/lint/reports/lint-results-debug.html

  assembleDebug:
    runs-on: ubuntu-latest
    needs: setup-build-environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Assemble debug
        run: |
          ./gradlew assembleDebug

      - name: Archive build outputs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build-outputs
          path: app/build/outputs/

  debugTests:
    runs-on: ubuntu-latest
    needs: [lintDebug, assembleDebug]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run debug tests
        run: |
          ./gradlew -Pci --console=plain :app:testDebug
